github_auth: &github_auth
  username: ((github.concourse_access_key))
  password: x-oauth-basic

resource_types:
- name: terraform
  type: docker-image
  source:
    repository: ljfranklin/terraform-resource
    tag: latest

resources:
  - name: ips-repo
    type: git
    icon: &git-icon github-circle
    source:
      <<: *github_auth
      uri: https://github.com/ONSdigital/ips_aws_terraform.git
      branch: aws-b-migration-remove-peer

  - name: ips-service-git
    type: git
    icon: &git-icon github-circle
    source:
      <<: *github_auth
      uri: https://github.com/ONSdigital/ips_services.git
      branch: develop

  - name: ips-ui-git
    type: git
    icon: &git-icon github-circle
    source:
      <<: *github_auth
      uri: https://github.com/ONSdigital/ips_user_interface.git
      branch: develop

  - name: ips-sandbox-tf
    type: terraform
    source:
      env_name: sandbox
      backend_type: s3
      backend_config:
        bucket: socsur-ips-aws-b-services-terraform-state
        key: ips-concourse/terraform.tfstate
        dynamodb_table: socsur-ips-aws-b-services-terraform-locks
        region: eu-west-2
        access_key: ((ipssandbox.concourse_user_id))
        secret_key: ((ipssandbox.concourse_user_secret))
        role_arn: ((ipssandbox.deploy_role))
      env:
        AWS_ACCESS_KEY_ID: ((ipssandbox.concourse_user_id))
        AWS_SECRET_ACCESS_KEY: ((ipssandbox.concourse_user_secret))

jobs:

  - name: build-ui
    serial: true
    plan:
      - in_parallel:
        - get: ips-repo
          trigger: true
        - get: ips-ui-git
          trigger: true
        - task: build-ui-image
          file: ips-repo/tasks/build_image_ui/task.yml
        params:
          AWS_ACCESS_KEY_ID: ((ipssandbox.concourse_user_id))
          AWS_SECRET_ACCESS_KEY: ((ipssandbox.concourse_user_secret))
          AWS_ROLE_ARN: ((ipssandbox.deploy_role))
          ECR_REPO: 000704438865.dkr.ecr.eu-west-2.amazonaws.com

  - name: build-service
    serial: true
    plan:
      - in_parallel:
        - get: ips-repo
          trigger: true
        - get: ips-service-git
          trigger: true
        - task: build-service-image
          file: ips-repo/tasks/build_image_service/task.yml
        params:
          AWS_ACCESS_KEY_ID: ((ipssandbox.concourse_user_id))
          AWS_SECRET_ACCESS_KEY: ((ipssandbox.concourse_user_secret))
          AWS_ROLE_ARN: ((ipssandbox.deploy_role))
          ECR_REPO: 000704438865.dkr.ecr.eu-west-2.amazonaws.com

  - name: deploy-ips
    serial: true
    plan:
      - get: ips-repo
        trigger: true
        passed:
          - build-ui
          - build-service
      - put: ips-sandbox-tf
        params:
          terraform_source: ips-repo/terraform_infrastructure/
          vars:
            role_arn: ((ipssandbox.deploy_role))
            environment_name: sandbox
            region: eu-west-2
            bastion_ingress_ip: 34.89.44.102
            deploy_key_name: ConcDeploy
            common_name: ips-sandbox
            db_name: ips
            db_password: ((ips.ips_db_password))
            db_user_name: root
            arn_certificate: ((ipssandbox.arn_certificate))
            ecr_repo: 000704438865.dkr.ecr.eu-west-2.amazonaws.com

  - name: ips-sql-schema
    serial: true
    plan:
      - in_parallel:
        - get: ips-repo
          passed: [deploy-ips]
          trigger: true
        - get: ips-service-git
        - get: ips-sandbox-tf
          passed: [deploy-ips]
      - task: insert-ips-sql-schema
        file: ips-repo/tasks/sql_schema/task.yml
        input_mapping:
          terraform: ips-sandbox-tf
        params:
          AWS_ACCESS_KEY_ID: ((ipssandbox.concourse_user_id))
          AWS_SECRET_ACCESS_KEY: ((ipssandbox.concourse_user_secret))
          AWS_ROLE_ARN: ((ipssandbox.deploy_role))
